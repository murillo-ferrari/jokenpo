name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install -g replace-in-file
        
      - name: Inject Firebase config
        run: |
          # Create properly formatted JSON
          FIREBASE_JSON=$(jq -n \
            --arg apiKey "${{ secrets.FIREBASE_API_KEY }}" \
            --arg authDomain "${{ secrets.FIREBASE_AUTH_DOMAIN }}" \
            --arg databaseURL "${{ secrets.FIREBASE_DATABASE_URL }}" \
            --arg projectId "${{ secrets.FIREBASE_PROJECT_ID }}" \
            --arg storageBucket "${{ secrets.FIREBASE_STORAGE_BUCKET }}" \
            --arg messagingSenderId "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" \
            --arg appId "${{ secrets.FIREBASE_APP_ID }}" \
            '{
              apiKey: $apiKey,
              authDomain: $authDomain,
              databaseURL: $databaseURL,
              projectId: $projectId,
              storageBucket: $storageBucket,
              messagingSenderId: $messagingSenderId,
              appId: $appId
            }')
          
          # Convert to base64
          FIREBASE_CONFIG=$(echo -n "$FIREBASE_JSON" | base64 -w 0 | tr -d '\n')
          
          # Debug output (shows first 10 chars only)
          echo "Config prefix: ${FIREBASE_CONFIG:0:10}..."
          
          # Replace placeholder
          if ! replace-in-file "@@FIREBASE_CONFIG@@" "$FIREBASE_CONFIG" index.html; then
            echo "::error::Failed to replace Firebase config"
            exit 1
          fi
          
          # Verify replacement
          if ! grep -q "$FIREBASE_CONFIG" index.html; then
            echo "::error::Config replacement verification failed"
            exit 1
          fi
          
          echo "Firebase config injected successfully"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
