name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Allow GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build and Inject Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install replace-in-file
        run: npm install replace-in-file

      - name: Inject Firebase Configuration
        run: |
          # Create properly formatted JSON
          FIREBASE_JSON=$(cat <<EOF
          {
            "apiKey": "${{ secrets.FIREBASE_API_KEY }}",
            "authDomain": "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            "databaseURL": "${{ secrets.FIREBASE_DATABASE_URL }}",
            "projectId": "${{ secrets.FIREBASE_PROJECT_ID }}",
            "storageBucket": "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            "messagingSenderId": "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            "appId": "${{ secrets.FIREBASE_APP_ID }}"
          }
          EOF
          )

          # Convert to base64
          FIREBASE_CONFIG=$(echo -n "$FIREBASE_JSON" | base64 -w 0)

          # Replace placeholder in HTML file
          npx replace-in-file "@@FIREBASE_CONFIG@@" "$FIREBASE_CONFIG" index.html

          # Verify replacement
          if ! grep -q "$FIREBASE_CONFIG" index.html; then
            echo "::error::Failed to inject Firebase configuration"
            exit 1
          fi
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
