name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: Install dependencies
        run: npm install replace-in-file
        
      - name: Inject Firebase config
        run: |
          # Ensure JSON is properly formatted and encoded
          FIREBASE_CONFIG=$(echo -n '{
            "apiKey": "${{ secrets.FIREBASE_API_KEY }}",
            "authDomain": "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            "databaseURL": "${{ secrets.FIREBASE_DATABASE_URL }}",
            "projectId": "${{ secrets.FIREBASE_PROJECT_ID }}",
            "storageBucket": "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            "messagingSenderId": "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            "appId": "${{ secrets.FIREBASE_APP_ID }}"
          }' | jq -c | base64 -w 0)
          
          echo "Using Firebase config (truncated): ${FIREBASE_CONFIG:0:30}..."
          npx replace-in-file "@@FIREBASE_CONFIG@@" "$FIREBASE_CONFIG" index.html
          
          # Verify replacement
          if ! grep -q "$FIREBASE_CONFIG" index.html; then
            echo "::error::Failed to inject Firebase config"
            exit 1
          fi
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .
          retention-days: 1

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
